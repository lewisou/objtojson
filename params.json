{"name":"Objtojson","tagline":"Better way to stringify your object","body":"Overview\r\n=========\r\n\r\nA better way to stringify your object in nodejs\r\n\r\nquick view in coffee/livescript\r\n```livescript\r\n    json = Generator.gen inv\r\n      .child 'counts' -> @attributes 'count_1' 'count_2' 'count_3'\r\n      .attributes 'sloc'\r\n      .node 'now' -> Time.now\r\n      .child 'item' ->\r\n        @attributes 'code' 'description'\r\n      .child 'location' ->\r\n        @attributes 'code'\r\n      .dict()\r\n```\r\nInstall\r\n---------\r\n```bash\r\nnpm install objtojson\r\n```\r\n\r\nCommon Useage in Livescript\r\n---------\r\n\r\n```livescript\r\nrequire! Generator : objtojson\r\n\r\nobj =\r\n  prop1 : 1\r\n  prop2 :\r\n    prop21 : \\a\r\n    prop22 : \\b\r\n  prop3 : \\hello\r\n  prop4 :\r\n    * prop1: 1\r\n      prop2: 2\r\n      prop3: 3\r\n    * prop1: 4\r\n      prop2: 5\r\n      prop3: 6\r\n\r\ntest-attributes = ->\r\n  test = Generator.gen obj\r\n    .attributes \\prop1 \\prop3\r\n    .dict!\r\n\r\n  # output {prop1: 1, prop3: \\hello}\r\n\r\ntest-node = ->\r\n  test = Generator.gen obj\r\n    .node \\fakeprop -> 'a fake value'\r\n    .node \\fakeprop2 -> \"a fake value 2 #{@prop3}\"\r\n    .dict!\r\n\r\n  # output {fakeprop : 'a fake value', fakeprop2: 'a fake value 2 hello'}\r\n\r\ntest-children = ->\r\n  test = Generator.gen obj\r\n    .children \\prop4 ->\r\n      @attributes \\prop1 \\prop3\r\n    .dict!\r\n\r\n  # output { prop4: [ { prop1: 1, prop3: 3 }, { prop1: 4, prop3: 6 } ] }\r\n\r\ntest-child = ->\r\n  obj =\r\n    prop1 : 1\r\n    prop2 :\r\n      subprop1 : 2\r\n      subprop2 : 3\r\n      subprop3 : 4\r\n  test = Generator.gen obj\r\n    .child \\prop2 ->\r\n      @attributes \\subprop2 \\subprop3\r\n    .dict!\r\n\r\n  # ouput {prop2 : {subprop2 : 3, subprop3 : 4}}\r\n\r\n```\r\n\r\nCommon Useage in Javascript\r\n------------\r\n\r\n```javascript\r\n  var Generator = require('objtojson');\r\n\r\n  obj = {\r\n    prop1: 1,\r\n    prop2: {\r\n      prop21: 'a',\r\n      prop22: 'b'\r\n    },\r\n    prop3: 'hello',\r\n    prop4: [\r\n      {\r\n        prop1: 1,\r\n        prop2: 2,\r\n        prop3: 3\r\n      }, {\r\n        prop1: 4,\r\n        prop2: 5,\r\n        prop3: 6\r\n      }\r\n    ]\r\n  };\r\n\r\n  testAttributes = function(){\r\n    var test = Generator.gen(obj).attributes('prop1', 'prop3').dict();\r\n    // output { prop1: 1, prop3: 'hello'}\r\n  };\r\n\r\n  testNode = function(){\r\n    var test = Generator.gen(obj).node('fakeprop', function(){\r\n      return 'a fake value';\r\n    }).node('fakeprop2', function(){\r\n      return \"a fake value 2 \" + this.prop3;\r\n    }).dict();\r\n\r\n    // output { fakeprop: 'a fake value', fakeprop2: 'a fake value 2 hello'}\r\n  };\r\n\r\n  testChildren = function(){\r\n    var test = Generator.gen(obj).children('prop4', function(){\r\n      this.attributes('prop1', 'prop3');\r\n    }).dict();\r\n\r\n    // output {\r\n    //  prop4: [\r\n    //    {\r\n    //      prop1: 1,\r\n    //      prop3: 3\r\n    //    }, {\r\n    //      prop1: 4,\r\n    //      prop3: 6\r\n    //    }\r\n    //  ]\r\n  };\r\n\r\n  testChild = function(){\r\n    var obj, test;\r\n    obj = {\r\n      prop1: 1,\r\n      prop2: {\r\n        subprop1: 2,\r\n        subprop2: 3,\r\n        subprop3: 4\r\n      }\r\n    };\r\n    test = Generator.gen(obj).child('prop2', function(){\r\n      this.attributes('subprop2', 'subprop3');\r\n    }).dict();\r\n\r\n    // output {\r\n    //   prop2: {\r\n    //     subprop2: 3,\r\n    //     subprop3: 4\r\n    //   }\r\n    // }\r\n  };\r\n\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}